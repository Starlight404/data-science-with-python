## learing with Numpy  1D   ###

### objectives ####

## the basics of array creation
## indexing and slicing 
## basic operations
## universal functions
import numpy as np

# a =np.array([0,11,2,3,4])
# print(a)
# print(a[1])##for accessing the numpy
# print(a.size)## for determing the size of the array
# print(a.dtype)
# x = type(a)## for finding the type
# print(x)

# print(a.ndim)## ndim represents the number of array dimention or the rank of the array. in this case which is " 1 " 

# print(a.shape)## the attribute shape is tuple of integers indicating the size of the array in each dimention
# b = np.array([3.1,5.66,33.22,6.99,6.56,3.14,3.20])
# print(b.dtype)

### for indexing and slicing #######
# c =np.array([20,30,200,350,4000])


# # print(c)
# d =c[1:4]## for slicing the array
# c[1:4] = 100,101,102
# print(d)

######## vetor addition and subtraction ############

u = np.array([1,0])
v =np.array([0,1])
z = (u + v)## addition

a = u - v## subtraction
print (z)
print(a)

######### vector multiplication with a scaler ###

y = np.array([1,2])

z = 2*y

print(z)
### hadamard product  or product of two numpy arrays #######

a = np.array([1,2])
b = np.array([3,4])

z = a*b
print(z)## here 1*3, 2*4 = [3,8] 

######## dot product ###########
u = ([1,2])
v = ([3,4])

z = np.dot(u,v)

print(z)### here (1*3) + (2*4) = 11

##### adding constant to an numpy array #######

u = np.array([1,-1,0,10])

v = u + 1
print(v)### here [1+1,-1+1,0+1,10+1] this property is also known as broadcasting

###### universal functions ########
'''
A universal function that operateson ndarrays'''

## finding mean #####
a = np.array([1,-1,1,-1])
mean = a.mean()

print(mean)### here finding the avarage of the 4 value 1/4(1-1+1-1)=0

########### pi ########

np.pi #### for "PI"

x = np.array([0,np.pi/2,np.pi])####[0,pi/2,pi]

y = np.sin(x)#####[sin(0),sin(pi/2),sin(pi)]

print(y)########[0.0000000e+00 1.0000000e+00 1.2246468e-16] or [0,1,0]

##############################################
a = np.linspace(-2,2,num = 10)### her num = 10 represents the interval count
'''
[-2.         -1.55555556 -1.11111111 -0.66666667 -0.22222222  0.22222222
  0.66666667  1.11111111  1.55555556  2.        ]'''

'''
linespace function returns evenly specified interval.'''
print(a)########[-2,-1,0,1,2]


########### plotting mathematical function ###############
x =np.linspace(0,5,10)
print(x)
y = np.sin(x)

import matplotlib.pyplot as plt
plt.plot(x,y)
plt.show()
