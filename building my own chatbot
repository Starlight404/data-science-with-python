import numpy as np
import nltk
import string
import random
import nltk
nltk.download('omw-1.4')
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity



f = open('C://Users//Rahul//OneDrive//Desktop//data science 101//python file//chatbot.txt','r', errors='ignore')
raw_doc = f.read()
raw_doc = raw_doc.lower()
nltk.download('punkt')
nltk.download('wordnet')
sent_tokens = nltk.sent_tokenize(raw_doc)
word_tokens = nltk.word_tokenize(raw_doc)

# print(sent_tokens[:2])
# print(word_sent[:2])


### for text preprocessing #########

lemmer = nltk.stem.WordNetLemmatizer()

def LemTokens(tokens):
    return[lemmer.lemmatize(token)for token in tokens]
remove_punct_dict = dict((ord(punct),None)for punct in string.punctuation)

def LemNormalize(text):
    return LemTokens(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))

GREET_INPUTS = ("Hello", "hi", "Greetings","sup","what's Up!!", "What's Up Hommie","Hey","What's Up Dog!!")
GREET_RESPONSES = ["Hi","Hello","Whats Up Hommie","Whats nigga","whats up Sport","I am Glad, that you are talking to me"]

## defining the greet function #######

def greet(sentence):
    for word in sentence.split():
        if word.lower() in GREET_INPUTS:
            return random.choice(GREET_RESPONSES)

### Response Generation ####



def response(user_response):
    robo1_response = ''
    TfidfVec = TfidfVectorizer(tokenizer = LemNormalize, stop_words = 'english')
    tfidf = TfidfVec.fit_transform(sent_tokens)
    vals =cosine_similarity(tfidf[-1], tfidf)
    idx = vals.argsort()[0][-2]
    flat = vals.flatten()
    flat.sort()
    req_tfidf = flat[-2]
    if(req_tfidf==0):
        robo1_response = robo1_response+ " Sorry man! I cant help you with that"
        return robo1_response
    else:
        robo1_response  = robo1_response+ sent_tokens[idx]
        return robo1_response    


######### defining coversation ####### start/ end protocols

flag = True
print("BOT: My name is Milo. Lets have a conversation!! Also, If you want to exit anytime, just say Bye")
while(flag == True):
    user_response = input()
    user_response = user_response.lower()
    if(user_response!='bye'):
        if(user_response=='thanks'or user_response =='thank you'):
            flag = False
            print("BOT:you are welcome.....")
        else:
            if(greet(user_response)!=None):
                print("BOT : "+ greet(user_response))
            else:
                sent_tokens.append(user_response)
                word_tokens = word_tokens +nltk.word_tokenize(user_response)
                final_words = list(set(word_tokens))
                print("BOT: ",end="")
                print(response(user_response))
                sent_tokens.remove(user_response)
    else:
        flag = False 
        print("BOT: GOOD BYE! TAKE CARE <3")

